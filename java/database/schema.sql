BEGIN TRANSACTION;

DROP TABLE IF EXISTS Tickets;
DROP TABLE IF EXISTS Passengers;
DROP TABLE IF EXISTS Flights;
DROP TABLE IF EXISTS Aircraft;
DROP TABLE IF EXISTS users;

CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL, 
    role VARCHAR(50) NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, 
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP 
);

CREATE TABLE Aircraft (
    AircraftID SERIAL PRIMARY KEY,
    RegistrationNumber VARCHAR(20) NOT NULL UNIQUE,
    Model VARCHAR(50) NOT NULL,
    Manufacturer VARCHAR(50) NOT NULL, 
    Capacity INT NOT NULL, 
    YearOfManufacture INT,
    LastServiceDate TIMESTAMP WITH TIME ZONE 
);

CREATE TABLE Flights (
    FlightID SERIAL PRIMARY KEY,
    FlightNumber VARCHAR(10) NOT NULL UNIQUE,
    DepartureAirport VARCHAR(50) NOT NULL,
    ArrivalAirport VARCHAR(50) NOT NULL,
    DepartureTime TIMESTAMP WITH TIME ZONE NOT NULL,
    ArrivalTime TIMESTAMP WITH TIME ZONE NOT NULL,
    AircraftID INT REFERENCES Aircraft(AircraftID) ON DELETE SET NULL,
    Status VARCHAR(20) DEFAULT 'Scheduled'
);

CREATE TABLE Passengers (
    PassengerID SERIAL PRIMARY KEY,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    Email VARCHAR(100) UNIQUE, 
    PhoneNumber VARCHAR(20),
    DateOfBirth DATE 
);

CREATE TABLE Tickets (
    TicketID SERIAL PRIMARY KEY,
    FlightID INT REFERENCES Flights(FlightID) ON DELETE CASCADE,
    PassengerID INT REFERENCES Passengers(PassengerID) ON DELETE CASCADE,
    BookingTime TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    SeatNumber VARCHAR(10),
    Price DECIMAL(10, 2),
    Status VARCHAR(20) DEFAULT 'Booked' 
);

COMMIT;
